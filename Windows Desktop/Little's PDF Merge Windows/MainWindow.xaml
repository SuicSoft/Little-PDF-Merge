<!--
   Do not copy our UI. You can copy anything from this project other than our UI.
   
   Do not copy our xaml and create fake versions of our software
    -->

<Metro:MetroWindow x:Name="metroWindow" x:Class="SuicSoft.LittleSoft.LittlesPDFMerge.Windows.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:Metro="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:ss="http://xaml.suicsoft.com/projects/LPM.Core/helpers"
        Title="Little's PDF Merge" Icon="Fonts-Icons\Icon.ico" MinHeight="215" MinWidth="290" Height="415" Width="625" AllowDrop="True" TextElement.Foreground="{DynamicResource MaterialDesignBody}" FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto" GlowBrush="{DynamicResource WindowTitleColorBrush}" SizeChanged="metroWindow_SizeChanged">
    <Grid>
        <Grid.RowDefinitions>
            <!--So that the blue thing won't fall down-->
            <RowDefinition x:Name="TitleHeight" MinHeight="55" MaxHeight="85" Height="85"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="1">
            <!--Files List-->
            <!--Ink ellipse-->
            <!--Files List-->
            <ListBox x:Name="FilesBox"/>
            <!--Ink ellipse-->
            <Ellipse x:Name="Ink" Width="{Binding Height, ElementName=Ink}" Fill="{DynamicResource SecondaryAccentBrush}" Height="115" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="-120,-100,0,0"/>
        </Grid>
        <!--Region Title-->
        <Border x:Name="TitleText" Background="{DynamicResource PrimaryHueDarkBrush}" SizeChanged="Border_SizeChanged">
            <Border.Effect>
                <DropShadowEffect BlurRadius="8" ShadowDepth="2.5" Direction="270" Color="#BBBBBB"/>
            </Border.Effect>
        </Border>
        <GridSplitter x:Name="split" ResizeDirection="Rows" Grid.Column="1" Height="5" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Background="{DynamicResource PrimaryHueDarkBrush}"/>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Viewbox x:Name="vb" Margin="0,0,0,25" Grid.Column="1">
                <Label  x:Name="TitleLabel" TextElement.Foreground="{DynamicResource MaterialDesignBody}" Content="Little's PDF Merge"  FontSize="35"  HorizontalAlignment="Center" Margin="5,5,10,5" VerticalAlignment="Top" MouseDoubleClick="TitleLabel_MouseDoubleClick"/>
            </Viewbox>
            <ToggleButton x:Name="HamburgerIcon" Style="{StaticResource MaterialDesignHamburgerToggleButton}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="8,8,0,0"/>
        </Grid>
        <StackPanel x:Name="ButtonsPanel"  HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Orientation="Horizontal" >
            <StackPanel.Resources>
                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignFlatButton}">
                    <Setter Property="Foreground" Value="{DynamicResource PrimaryHueLightBrush}"/>
                </Style>
            </StackPanel.Resources>
            <!--<ComboBox x:Name="Mergebtn" x:Uid="Mergebtn" IsEnabled="False" Height="23" Width="76" IsEditable="True" IsReadOnly="True" Text="Merge" SelectedIndex="-1" HorizontalContentAlignment="Center" Margin="5" FontWeight="Bold" Background="{x:Null}" Foreground="{DynamicResource PrimaryHueLightBrush}">
                <ComboBox.Style>
                    <Style TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignComboBox}">
                        <Style.Triggers>
                            <Trigger Property="IsEnabled"  Value="False">
                                <Setter Property="Opacity" Value="0.50"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>-->
            <Button x:Name="bm" x:Uid="bm" IsEnabled="False" Content="Merge" Click="btnmerge_Click"/>
            <!--</ComboBox>-->
            <Button x:Name="ub" x:Uid="ub" IsEnabled="False" Content="Up" Click="MI" Padding="0" Width="40" Margin="6"/>
            <Button x:Name="db" x:Uid="db" IsEnabled="False" Content="Down" Click="MI" Padding="0" Width="50" Margin="6"/>
            <Button x:Uid="rb" x:Name="rb" IsEnabled="False"  Content="Remove" Padding="0" Width="76" Margin="6" Click="RemoveItem"/>
            <x:Code>
                private void RemoveItem(object sender, RoutedEventArgs e)
        {
            FilesBox.Items.Remove(FilesBox.SelectedItem);
            UpdateUI();
        }
            </x:Code>
        </StackPanel>
        <Rectangle x:Name="rectangle" Height="5" Fill="Transparent" Grid.Row="1" VerticalAlignment="Bottom"/>
        <StackPanel x:Name="stackPanel" Orientation="Horizontal" Background="{DynamicResource MaterialDesignPaper}" Grid.Row="1" Height="25" VerticalAlignment="Bottom">
            <StackPanel.Effect>
                <DropShadowEffect BlurRadius="5" ShadowDepth="1" Direction="0" Color="#CCCCCC"/>
            </StackPanel.Effect>
            <Button Style="{StaticResource MaterialDesignFlatButton}" Height="Auto" Foreground="White" Content="Messages"/>
            <Button Style="{StaticResource MaterialDesignFlatButton}" Height="Auto" Foreground="White" Content="Console"/>
        </StackPanel>
        <Button x:Name="button" Style="{StaticResource MaterialDesignFloatingActionButton}" Background="{x:Null}" BorderBrush="{x:Null}" VerticalAlignment="Bottom" HorizontalAlignment="Right" Grid.Row="1" Width="20" Height="20" Margin="2.5">
            <Viewbox Width="18" Height="18">
                <Canvas Width="24" Height="24">
                    <Path Data="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z" Fill="White" />
                </Canvas>
            </Viewbox>
        </Button>
        <Grid x:Name="grid" UseLayoutRounding="True"  RenderOptions.BitmapScalingMode="NearestNeighbor" Height="65" Width="65" Grid.Row="2" Grid.RowSpan="2" HorizontalAlignment="Right" VerticalAlignment="Bottom"  Margin="0,0,7,26">
            <Button x:Name="AddFilebtn"  Style="{StaticResource MaterialDesignFloatingActionAccentButton}" Height="{Binding Width, ElementName=AddFilebtn}" Width="56"  Foreground="White" ToolTip="Add a file" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Center" VerticalAlignment="Center" Click="AddFilebtn_Click">
                <Button.Effect>
                    <DropShadowEffect x:Name="shadoweffect" BlurRadius="8" ShadowDepth="2.5" Direction="290" Color="#BBBBBB"/>
                </Button.Effect>
                <Button.Triggers>
                    <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                        <BeginStoryboard>
                            <Storyboard>
                                <!--Region Load animation (if you can see it)-->
                                <!--EndRegion-->
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="ButtonBase.Click">
                        <BeginStoryboard>
                            <!--EndRegion-->
                            <!--Region Click animation-->
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="shadoweffect"  Storyboard.TargetProperty="BlurRadius" To="13" Duration="0:0:0.225"/>
                                <DoubleAnimation Storyboard.TargetName="shadoweffect"  Storyboard.TargetProperty="ShadowDepth"  To="4.5" Duration="0:0:0.225"/>
                                <DoubleAnimation Storyboard.TargetName="shadoweffect"  Storyboard.TargetProperty="BlurRadius" BeginTime="0:0:0.225" To="8" Duration="0:0:0.4"/>
                                <DoubleAnimation Storyboard.TargetName="shadoweffect"  Storyboard.TargetProperty="ShadowDepth"  BeginTime="0:0:0.225" To="2.5" Duration="0:0:0.4"/>
                                <DoubleAnimation Storyboard.TargetProperty="Width" To="57" Duration="0:0:0.4"/>
                                <DoubleAnimation Storyboard.TargetProperty="Width" BeginTime="0:0:0.225" To="57" Duration="0:0:0.4"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Button.Triggers>
                <Label x:Name="PlusIcon"  FontFamily="Fonts-Icons/#Material-Design-Iconic-Font" SnapsToDevicePixels="True" RenderOptions.EdgeMode="Aliased" RenderOptions.BitmapScalingMode="NearestNeighbor"  FontSize="29.333"  Foreground="White" RenderTransformOrigin="0.5,0.5" Content="&#xF0FB;" >
                    <Label.RenderTransform>
                        <TransformGroup>
                            <RotateTransform Angle="12"/>
                        </TransformGroup>
                    </Label.RenderTransform>
                </Label>
            </Button>
        </Grid>
    </Grid>
    <Metro:MetroWindow.Resources>
        <SolidColorBrush x:Key="WindowTitleColorBrush" Color="{DynamicResource Primary700}"/>
        <CircleEase x:Key="ease"/>
        <Storyboard x:Key="InkSplash" Timeline.DesiredFrameRate="40">
            <DoubleAnimationUsingKeyFrames BeginTime="0:0:0.25" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Ink">
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimation EasingFunction="{StaticResource ease}" Storyboard.TargetProperty="Height" Duration="0:0:0.4" Storyboard.TargetName="Ink" To="1000"/>
            <DoubleAnimation BeginTime="0:0:0.7" EasingFunction="{StaticResource ease}" Storyboard.TargetProperty="Height" Storyboard.TargetName="Ink" Duration="0:0:0.1" To="115"/>
            <DoubleAnimation BeginTime="0:0:0.8" EasingFunction="{StaticResource ease}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Ink" Duration="0:0:0.0" To="1"/>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="Ink">
                <EasingThicknessKeyFrame KeyTime="0:0:0.4" Value="-100,-400,0,0" EasingFunction="{DynamicResource ease}"/>
                <EasingThicknessKeyFrame KeyTime="0:0:0.7" Value="-120,-100,0,0" EasingFunction="{DynamicResource ease}"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="Hide">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="button">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="button">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="stackPanel">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="grid">
                <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="0,0,7,10"/>
            </ThicknessAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="stackPanel">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="button">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="Show">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="stackPanel">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="25"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="button">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="20"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="button">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="20"/>
            </DoubleAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="grid">
                <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="0,0,7,26"/>
            </ThicknessAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="stackPanel">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="button">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </Metro:MetroWindow.Resources>
    <Metro:MetroWindow.Triggers>
        <EventTrigger RoutedEvent="ToggleButton.Click" SourceName="HamburgerIcon">
            <BeginStoryboard Storyboard="{StaticResource InkSplash}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="button">
            <BeginStoryboard x:Name="Hide_BeginStoryboard" Storyboard="{StaticResource Hide}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="UIElement.MouseEnter" SourceName="rectangle">
            <BeginStoryboard x:Name="Show_BeginStoryboard" Storyboard="{StaticResource Show}"/>
        </EventTrigger>
    </Metro:MetroWindow.Triggers>
</Metro:MetroWindow>

